(function(){
  const LS_KEY='chatBooyArchive';
  const lsLoad=()=>{ try{ return JSON.parse(localStorage.getItem(LS_KEY))||[] }catch(e){ return [] } };
  const lsSave=(v)=>localStorage.setItem(LS_KEY, JSON.stringify(v));
  const archiveAdd=(rec)=>{ const L=lsLoad(); L.unshift(rec); lsSave(L); };

  const Prompts = {
    prova:(tema)=>`Voc√™ √© um **professor de Direito** (OAB/concursos) do **direito.love**.

**TEMA:** ${tema}
**OBJETIVO:** Estudar para a prova ‚Äî direto ao ponto, com didatismo e sem juridiqu√™s.

**REGRAS**
- Linguagem simples e precisa. N√£o cite n¬∫ de processos/REsp/AREsp.
- Traga apenas entendimentos **majorit√°rios** de STF/STJ (sem n¬∫).
- N√£o inclua links; gere **10 buscas Google** em ‚Äúüîé Buscas prontas‚Äù no formato \`https://www.google.com/search?q=tema+palavra\` (somente a frase linkada).

**ENTREGA (nesta ordem):**
1) Conceito direto (5‚Äì7 linhas).
2) Mapa mental textual (t√≥picos hier√°rquicos).
3) Exemplos pr√°ticos de prova (2‚Äì3).
4) Entendimento majorit√°rio STF/STJ (bullets; sem n¬∫).
5) Pegadinhas & confus√µes comuns (4‚Äì6).
6) Quadro comparativo (se fizer sentido).
7) Checklist de revis√£o (10 bullets).
8) üîé Buscas prontas ‚Äî gere **10** links com ${tema} + (jurisprud√™ncia, ac√≥rd√£os, s√∫mulas, enunciados, doutrina, decis√µes, casos, debates, cr√≠ticas, not√≠cias).

**FECHAMENTO:** pergunte se quer outra estrat√©gia (Quest√µes, Correlatos, Apresenta√ß√£o, Decoreba ou Casos).

**üíö [direito.love](https://direito.love)**`,

    questoes:(tema)=>`Voc√™ √© **professor e curador de quest√µes** do **direito.love**.

**TEMA:** ${tema}
**OBJETIVO:** Treinar com **15 quest√µes (A‚ÄìE)**.

**REGRA DE OURO (2 ETAPAS):**
- ETAPA 1 (agora): mostre apenas as **15 quest√µes**, sem gabarito.
- Ao final, pergunte: ‚ÄúPosso liberar o gabarito comentado?‚Äù e **espere autoriza√ß√£o**.
- ETAPA 2 (s√≥ se autorizado): traga **gabarito comentado** item a item.

**CRIT√âRIOS:**
- Preferir itens reais (OAB/concursos). Cite **banca e ano** (ex.: OAB/FGV 2023). Sem n¬∫ de processos.
- Autorais ‚Üí marcar ‚Äú(autorais)‚Äù.
- N√≠veis: **5 f√°ceis, 6 m√©dias, 4 dif√≠ceis** (etiquetar).
- Distribuir por subtemas relevantes.

**FORMATOS:**
- ETAPA 1: [N√≠vel] Enunciado + alternativas A‚ÄìE.
- ETAPA 2: Letra correta + coment√°rio (2‚Äì4 linhas), fundamento legal (lei/artigo), entendimento majorit√°rio STF/STJ (sem n¬∫), dica de mem√≥ria.

**P√ìS-PROVA:** Placar + an√°lise por t√≥pico + pr√≥ximos passos; oferecer outra estrat√©gia.

**üíö [direito.love](https://direito.love)**`,

    correlatos:(tema)=>`Voc√™ √© pesquisador jur√≠dico do **direito.love**.

**TEMA-√ÇNCORA:** ${tema}
**OBJETIVO:** Sugerir **20 temas correlatos** √∫teis.

**REGRAS:**
- Organize em **3‚Äì4 grupos** (fundamentos, aplica√ß√µes, controv√©rsias, pr√°tica).
- Cada item: **t√≠tulo (‚â§8 palavras) + foco (OAB/concursos/pr√°tica) + motivo (1 linha)**.
- Ordenar do b√°sico ao avan√ßado, sem redund√¢ncia.

**ENTREGA:**
- Liste 1 a 20 e pe√ßa: ‚ÄúEscolha um n√∫mero para rodar agora.‚Äù

**üíö [direito.love](https://direito.love)**`,

    apresentacao:(tema)=>`Voc√™ √© professor-orador do **direito.love**.

**TEMA:** ${tema}
**OBJETIVO:** Roteiro de **apresenta√ß√£o oral (5 min)**, de alto impacto.

**ESTRUTURA (com tempo):**
- 0:00‚Äì0:30 Abertura (contexto + tese em 1 frase).
- 0:30‚Äì3:30 Desenvolvimento (3 argumentos com evid√™ncia pr√°tica).
- 3:30‚Äì4:30 Exemplo aplicado (caso t√≠pico).
- 4:30‚Äì5:00 Fechamento (3 bullets + CTA).

**ENTREGA:**
- Roteiro em bullets com marca√ß√£o de tempo + **miniscript** (falas curtas).
- 3 frases de impacto + 1 pergunta ret√≥rica.
- Pergunte se quer **slides/handout** (se sim, descreva 6‚Äì8 slides).

**üíö [direito.love](https://direito.love)**`,

    decoreba:(tema)=>`Voc√™ √© professor de memoriza√ß√£o do **direito.love**.

**TEMA:** ${tema}
**OBJETIVO:** **Decoreba assertiva** ‚Äî curto e certeiro.

**ENTREGA:**
1) N√£o posso esquecer: 12‚Äì18 assertivas diretas.
2) Mnem√¥nicos & macetes: 3‚Äì5.
3) Confus√µes comuns: 3‚Äì5 pares (diferencie).
4) Flashcards (Pergunta‚ÜíResposta): 6‚Äì8.
5) Regra de bolso (5 bullets).

**REGRAS:**
- Linguagem simples, sem n¬∫ de processos.
- STF/STJ s√≥ em ideia majorit√°ria, sem n¬∫.
- Finalize oferecendo Quest√µes ou Apresenta√ß√£o.

**üíö [direito.love](https://direito.love)**`,

    casos:(tema)=>`Voc√™ √© professor de pr√°tica do **direito.love**.

**TEMA-GUIA:** ${tema}
**OBJETIVO:** **3 casos concretos completos**, comentados e fundamentados.

**PARA CADA CASO:**
- Fatos resumidos, Problema jur√≠dico.
- Solu√ß√£o passo a passo com lei/artigo e entendimento majorit√°rio STF/STJ (sem n¬∫).
- Estrat√©gia pr√°tica (pe√ßas cab√≠veis, riscos).
- Varia√ß√µes e pegadinhas.
- Checklist final.

**EXTRA ‚Äî üîé Buscas prontas:** gere **10 links** \`https://www.google.com/search?q=tema+palavra\` com ${tema} + (jurisprud√™ncia, ac√≥rd√£os, s√∫mulas, enunciados, doutrina, decis√µes, casos, debates, cr√≠ticas, not√≠cias). **Apenas a frase linkada**.

**üíö [direito.love](https://direito.love)**`,

    testeRelampago:(tema)=>`Voc√™ √© elaborador do **direito.love** e criar√° um **Teste Rel√¢mpago (5 quest√µes)** para fixa√ß√£o r√°pida.

**TEMA:** ${tema}
**OBJETIVO:** Micro-avalia√ß√£o para revisar em poucos minutos (mobile-friendly).

**FORMATO:**
- 5 quest√µes objetivas (A‚ÄìE), **com gabarito imediato ap√≥s cada quest√£o**.
- Linguagem simples; foque em pegadinhas usuais.
- Cada gabarito: 1‚Äì2 linhas com porqu√™ a correta √© correta e as demais, n√£o.

**ENTREGA:**
1) Q1 (A‚ÄìE) ‚Üí Gabarito imediato.
2) Q2 (A‚ÄìE) ‚Üí Gabarito imediato.
3) Q3 (A‚ÄìE) ‚Üí Gabarito imediato.
4) Q4 (A‚ÄìE) ‚Üí Gabarito imediato.
5) Q5 (A‚ÄìE) ‚Üí Gabarito imediato.
6) Resumo de desempenho com recomenda√ß√µes de revis√£o.

**üíö [direito.love](https://direito.love)**`,

    mapaMental:(tema)=>`Voc√™ √© professor-esquematizador do **direito.love** e criar√° um **Mapa Mental Explicativo**.

**TEMA:** ${tema}
**OBJETIVO:** Vis√£o visual e conectada dos principais conceitos.

**FORMATO:**
- T√≥picos em **Markdown** com n√≠veis (‚Ä¢, ‚ó¶, ‚Äì).
- Indique **causa ‚Üí consequ√™ncia**, **exce√ß√µes**, **palavras‚Äëchave**.
- Finalize com bloco **‚ÄúComo lembrar‚Äù** (3 macetes).
- Se fizer sentido, um mini-diagrama textual usando ‚Üí e ‚áÑ.

**ENTREGA:**
- N√∫cleo do tema ‚Üí subtemas ‚Üí exce√ß√µes ‚Üí jurisprud√™ncia majorit√°ria (sem n¬∫) ‚Üí pr√°tica.
- ‚ÄúComo lembrar‚Äù (3 bullets).

**üíö [direito.love](https://direito.love)**`,

    errosProva:(tema)=>`Voc√™ √© coach de prova do **direito.love** e listar√° os **Erros que mais caem**.

**TEMA:** ${tema}
**OBJETIVO:** Destacar pegadinhas, confus√µes e pontos de reprova√ß√£o.

**FORMATO:**
- T√≥picos curtos e **cir√∫rgicos** (1‚Äì2 linhas).
- Para cada erro: **o que cai** + **como n√£o errar** (dica pr√°tica).
- Agrupar em: Conceito, Exce√ß√µes, Jurisprud√™ncia, Aplica√ß√£o pr√°tica.

**ENTREGA:**
- 10‚Äì15 bullets, agrupados nas 4 categorias.
- Checklist final (5 itens).

**üíö [direito.love](https://direito.love)**`,

    quadroComparativo:(tema)=>`Voc√™ √© professor comparatista do **direito.love** e far√° um **Quadro comparativo**.

**TEMA:** ${tema}
**OBJETIVO:** Evitar confus√£o entre institutos semelhantes.

**FORMATO (Markdown):**
| Instituto | Defini√ß√£o objetiva | Exemplo‚Äëchave |
|---|---|---|
| ... | ... | ... |

**INSTRU√á√ïES:**
- Liste 4‚Äì8 linhas relevantes ao tema.
- Defini√ß√µes curtas e funcionais (sem juridiqu√™s).
- Exemplo pr√°tico por linha.
- Feche com ‚ÄúQuando usar qual?‚Äù em 3 bullets.

**üíö [direito.love](https://direito.love)**`
  };

  const $ = s=>document.querySelector(s);
  const sleep = ms=> new Promise(r=> setTimeout(r, ms));
  const wait = (min=1000,max=1800)=> {
    const reduce = matchMedia('(prefers-reduced-motion: reduce)').matches;
    return sleep(reduce?0: Math.floor(Math.random()*(max-min+1))+min);
  };
  function push(role, html){
    const box = $('#messages');
    const w = document.createElement('div');
    w.className = `msg ${role}`;
    const b = document.createElement('div');
    b.className='bubble';
    b.innerHTML = html;
    w.appendChild(b); box.appendChild(w);
    box.scrollTop = box.scrollHeight;
    return w;
  }
  function typingStart(){ return push('bot', `<span class="typing"><span class="dot"></span><span class="dot"></span><span class="dot"></span></span>`); }
  function typingStop(node){ if(node && node.parentElement){ node.parentElement.removeChild(node); } }
  function truncate(t,n=80){ return t.length>n? t.slice(0,n-1)+'‚Ä¶': t; }
  const labels = ()=>({prova:'Estudar p/ Prova', questoes:'Quest√µes (A‚ÄìE)', correlatos:'Correlatos', apresentacao:'Apresenta√ß√£o (5min)', decoreba:'Decoreba', casos:'Casos concretos', testeRelampago:'üß™ Teste', mapaMental:'üß† Mapa', errosProva:'üéØ Erros', quadroComparativo:'üìö Quadro'});
  const allStrategies = ()=> Object.keys(labels());

  let tema=''; let chosen=new Set(); let lastSavedId=null;

  async function showRemaining(prefix=true){
    const L=labels(); const remaining = allStrategies().filter(s=> !chosen.has(s));
    if(!remaining.length){ const t=typingStart(); await wait(); typingStop(t); push('bot','Fechamos todas as estrat√©gias. Quer iniciar uma nova pesquisa (‚Üª no topo)?'); return; }
    if(prefix){ const t=typingStart(); await wait(); typingStop(t); push('bot', `Escolha outra estrat√©gia para <strong>${truncate(tema,60)}</strong>:`); }
    const bar=document.createElement('div'); bar.className='chips';
    remaining.forEach(s=>{ const b=document.createElement('button'); b.className='chip'; b.textContent=L[s]; b.setAttribute('data-s', s); b.addEventListener('click',()=>handleStrategy(s)); bar.appendChild(b); });
    push('bot', bar.outerHTML);
  }

  function renderPrompt(s){
    const txt = Prompts[s](tema);
    return `<div class="prompt-card">
      <h3 class="prompt-title">${truncate(tema,80)}</h3>
      <textarea readonly>${txt}</textarea>
      <div class="row">
        <button class="iconbtn copy" title="Copiar"><img src="icons/copy.svg" alt=""></button>
        <button class="iconbtn new" title="Nova pesquisa"><img src="icons/refresh.svg" alt=""></button>
      </div>
    </div>`;
  }
  function renderAI(){ return `<div class="ai-buttons" role="group" aria-label="Abrir na IA">
    <button class="ai" data-ai="chatgpt" title="Abrir no ChatGPT"><img src="icons/chatgpt.svg" alt=""></button>
    <button class="ai" data-ai="gemini" title="Abrir no Gemini"><img src="icons/gemini.svg" alt=""></button>
    <button class="ai" data-ai="perplexity" title="Abrir no Perplexity"><img src="icons/perplexity.svg" alt=""></button>
  </div>`; }
  function openAI(ai){ const map={chatgpt:'https://chat.openai.com/', gemini:'https://gemini.google.com/', perplexity:'https://www.perplexity.ai/'}; const url=map[ai]; if(url) window.open(url,'_blank','noopener'); }

  async function handleStrategy(s){
    const L=labels(); chosen.add(s);
    push('user', `<div class="bubble">${L[s]}</div>`);
    let t=typingStart(); await wait(); typingStop(t);
    push('bot', `Gerando prompt de <strong>${L[s]}</strong>‚Ä¶`);
    t=typingStart(); await wait(1200,2000); typingStop(t);
    const wrap = push('bot', renderPrompt(s));
    const card = wrap.querySelector('.prompt-card'); const ta=card.querySelector('textarea');
    const btnCopy=card.querySelector('.copy'); const btnNew=card.querySelector('.new');

    btnCopy.addEventListener('click', async ()=>{
      await navigator.clipboard.writeText(ta.value);
      btnCopy.title='Copiado!'; btnCopy.setAttribute('aria-label','Copiado');
      lastSavedId = (Date.now().toString(36)+Math.random().toString(36).slice(2,8));
      archiveAdd({ id:lastSavedId, theme:tema, strategy:s, strategyLabel=L[s], prompt:ta.value, createdAt:new Date().toISOString(), aiClicks:[] });
      await sleep(350);
      const aiWrap=document.createElement('div'); aiWrap.innerHTML=renderAI(); card.appendChild(aiWrap.firstElementChild);
      card.querySelectorAll('.ai').forEach(btn=> btn.addEventListener('click', async ()=>{
        const ai = btn.getAttribute('data-ai'); let t=typingStart(); await sleep(400); typingStop(t); push('bot','copiado'); openAI(ai); await sleep(400); showRemaining(true);
      }));
      setTimeout(()=>{ btnCopy.title='Copiar'; btnCopy.setAttribute('aria-label','Copiar'); }, 1200);
    });
    btnNew.addEventListener('click', ()=>{ tema=''; chosen=new Set(); push('bot','Novo tema?'); $('#input').focus(); });
  }

  async function onSend(){
    const inp=$('#input'); const text=inp.value.trim(); if(!text) return;
    push('user', `<div class="bubble">${truncate(text,140)}</div>`); inp.value='';
    if(!tema){ tema=text; let t=typingStart(); await wait(); typingStop(t);
      push('bot','Beleza. Vou te mostrar as estrat√©gias dispon√≠veis.');
      await wait(500,900); t=typingStart(); await wait(300,700); typingStop(t);
      push('bot', `O que voc√™ quer fazer com <strong>${truncate(tema,60)}</strong>?`);
      await wait(300,600); showRemaining(false);
    } else { let t=typingStart(); await wait(400,700); typingStop(t); push('bot','Escolha uma estrat√©gia nos bot√µes acima.'); }
  }

  function bind(){
    $('#send').addEventListener('click', onSend);
    $('#input').addEventListener('keydown', e=>{ if(e.key==='Enter') onSend(); });
    $('#btn-archive').addEventListener('click', ()=>{ window.location.href='arquivo.html'; });
    $('#btn-new').addEventListener('click', ()=>{ tema=''; chosen=new Set(); push('bot','Novo tema?'); $('#input').focus(); });
  }
  function maybeReopen(){
    try{ const data=JSON.parse(localStorage.getItem('chatBooyReopen')||'null'); if(!data) return;
      localStorage.removeItem('chatBooyReopen'); tema=data.theme;
      const t=typingStart(); setTimeout(()=>{ typingStop(t); push('bot','Reabrindo do arquivo‚Ä¶'); handleStrategy(data.strategy); }, 700);
    }catch(e){}
  }
  (async function init(){
    bind(); let t=typingStart(); await sleep(300); typingStop(t);
    push('bot','<strong>Bem-vindo</strong>'); t=typingStart(); await wait(); typingStop(t);
    push('bot','Qual √© o tema?'); $('#input').focus(); maybeReopen();
  })();
})();
