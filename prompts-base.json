// ================================
// app.js - direito.love (revisado)
// Etapa 2: geração de prompts reais
// ================================

// Seletores principais
const tabs = document.querySelectorAll('.tab');
const userInput = document.getElementById('user-input');
const accordionItems = document.querySelectorAll('.accordion-item');
const modal = document.getElementById('prompt-modal');
const modalText = document.getElementById('prompt-text');
const copyBtn = document.getElementById('copy-btn');
const newGoalBtn = document.getElementById('new-goal-btn');
const newInputBtn = document.getElementById('new-input-btn');
const favBtn = document.getElementById('fav-btn');
const waBtn = document.getElementById('wa-btn');
const drawer = document.getElementById('drawer');
const openDrawerBtn = document.getElementById('open-drawer');
const closeDrawerBtn = document.getElementById('close-drawer');

// Estado
let currentCategory = 'tema';
let objetivos = [];
let templates = [];
let currentPrompt = '';

// Alternar categorias
tabs.forEach(tab => {
  tab.addEventListener('click', () => {
    currentCategory = tab.dataset.category;
    switch (currentCategory) {
      case 'tema':
        userInput.placeholder = 'Digite o tema do estudo...';
        break;
      case 'texto':
        userInput.placeholder = 'Cole aqui o texto base...';
        break;
      case 'youtube':
        userInput.placeholder = 'Cole o link do vídeo do YouTube...';
        break;
      case 'arquivo':
        userInput.placeholder = 'Descreva o arquivo (anexe depois na IA)...';
        break;
    }
  });
});

// Carregar JSONs
Promise.all([
  fetch('prompts.json').then(res => res.json()),
  fetch('prompts-base.json').then(res => res.json())
])
  .then(([promptsData, baseData]) => {
    objetivos = promptsData.objetivos;
    templates = baseData.objetivos;
    renderAccordion();
  })
  .catch(err => console.error('Erro ao carregar JSONs:', err));

// Renderizar accordion
function renderAccordion() {
  accordionItems.forEach(item => {
    const header = item.querySelector('.accordion-header');
    const content = item.querySelector('.accordion-content');
    const grupo = header.textContent.trim();

    const objs = objetivos.filter(obj => obj.grupo === grupo);
    content.innerHTML = '';

    objs.forEach(obj => {
      const btn = document.createElement('button');
      btn.textContent = obj.titulo;
      btn.className = 'objective-btn';
      btn.setAttribute('data-id', obj.id);
      btn.setAttribute('aria-label', `Selecionar objetivo: ${obj.titulo}`);
      btn.addEventListener('click', () => gerarPrompt(obj.id));
      content.appendChild(btn);
    });
  });
}

// Gerar prompt
function gerarPrompt(objId) {
  const entrada = userInput.value.trim();
  if (!entrada) {
    alert('⚠️ Insira um conteúdo antes de gerar o prompt!');
    return;
  }

  const templateObj = templates.find(t => t.id === objId);
  if (!templateObj) return;

  const template = templateObj.templates[currentCategory];

  // Substitui placeholder conforme categoria
  currentPrompt = template
    .replace('{tema}', entrada)
    .replace('{texto}', entrada)
    .replace('{youtube}', entrada)
    .replace('{arquivo}', entrada);

  // Exibir modal
  modalText.textContent = currentPrompt;
  modal.style.display = 'flex';
  modal.setAttribute('aria-hidden', 'false');
}

// Accordion expand/collapse
const accordionHeaders = document.querySelectorAll('.accordion-header');
accordionHeaders.forEach(header => {
  header.addEventListener('click', () => {
    const expanded = header.getAttribute('aria-expanded') === 'true';
    header.setAttribute('aria-expanded', !expanded);
  });
});

// Botões do modal
copyBtn.addEventListener('click', () => {
  navigator.clipboard.writeText(currentPrompt).then(() => {
    alert('✅ Prompt copiado com sucesso!');
  });
});

newGoalBtn.addEventListener('click', () => {
  modal.style.display = 'none';
});

newInputBtn.addEventListener('click', () => {
  userInput.value = '';
  modal.style.display = 'none';
});

favBtn.addEventListener('click', () => {
  let favs = JSON.parse(localStorage.getItem('favoritos')) || [];
  favs.push(currentPrompt);
  localStorage.setItem('favoritos', JSON.stringify(favs));
  alert('⭐ Adicionado aos favoritos!');
});

waBtn.addEventListener('click', () => {
  const url = `https://wa.me/?text=${encodeURIComponent(currentPrompt)}`;
  window.open(url, '_blank');
});

// Fechar modal clicando fora
modal.addEventListener('click', (e) => {
  if (e.target === modal) {
    modal.style.display = 'none';
    modal.setAttribute('aria-hidden', 'true');
  }
});

// Drawer
openDrawerBtn.addEventListener('click', () => {
  drawer.setAttribute('aria-hidden', 'false');
});

closeDrawerBtn.addEventListener('click', () => {
  drawer.setAttribute('aria-hidden', 'true');
});
